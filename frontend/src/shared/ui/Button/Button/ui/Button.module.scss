@use 'mixins/_flex.scss' as flex;
@use 'mixins/_font.scss' as font;

/* $size: large | small
*  $hb - button height
*  $is - icon size
*/
@mixin sizeButton($size, $bh, $padding, $gap, $is) {
  padding: $padding;
  height: $bh;

  .content {
    gap: $gap;

    .text {
      @if $size == 'large' {
        @include font.body('stronger');
      } @else if $size == 'small' {
        @include font.bodyMinus('default');
      }
    }
  }

  svg {
    width: $is;
    aspect-ratio: 1;
  }
}

/*
 * $state: hover | focus-within | active | disabled
 * $bg - background color
 * $color - text color
 * $ow - outline width
 * $oc - outline color
*/
$ow: 1.5px;
@mixin stateButton($state, $bg: null, $color: null, $oc: null) {
  &:#{$state} {
    @if $bg {
      background-color: $bg;
    }

    @if $color {
      color: $color;
    }

    @if $oc {
      outline: $ow solid $oc;
    }
  }
}

.button {
  border-radius: var(--radius-button);
  cursor: pointer;

  transition: 0.3s ease;
  min-width: 134.88px;

  .content {
    fill: currentColor;

    @include flex.display(flex, row, center, center);
    width: 100%;

    svg {
      flex-shrink: 0;
    }

    span {
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
    }
  }

  &:disabled {
    cursor: not-allowed;
  }

  &.large {
    @include sizeButton('large', 56px, 16px 24px, 10px, 24px);
  }

  &.small {
    @include sizeButton('small', 40px, 8px 18px, 8px, 21px);
  }
}

.primary {
  background-color: var(--brand);
  color: var(--text-white);

  @include stateButton(hover, var(--brand-hover));
  @include stateButton(active, var(--brand), var(--brand-light-hover));
  @include stateButton(focus-visible, $oc: var(--text-primary));
  @include stateButton(disabled, var(--bg-2), var(--text-disabled));
}

.secondary {
  background-color: var(--bg-3);
  color: var(--text-2);

  @include stateButton(hover, var(--bg-3-hover), var(--text-white));
  @include stateButton(active, var(--bg-3), var(--text-2));
  @include stateButton(focus-visible, $oc: var(--text-primary));
  @include stateButton(disabled, var(--bg-2), var(--text-disabled));
}

.outlined,
.label {
  background-color: transparent;
}

.outlined {
  outline: $ow solid var(--stroke);
  color: var(--text-3);

  @include stateButton(hover, $color: var(--text-white), $oc: var(--stroke-hover));
  @include stateButton(active, $color: var(--text-3), $oc: var(--stroke));
  @include stateButton(focus-visible, $color: var(--text-3), $oc: var(--brand-light));
  @include stateButton(disabled, $color: var(--text-disabled), $oc: var(--stroke-subtle));
}

.label {
  color: var(--text-4);

  @include stateButton(hover, var(--bg-2-hover), var(--text-white));
  @include stateButton(active, var(--bg-2), var(--text-4));
  @include stateButton(focus-visible, $color: var(--text-3), $oc: var(--brand-light));
  @include stateButton(disabled, $color: var(--text-disabled));
}
